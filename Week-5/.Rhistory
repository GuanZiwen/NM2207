#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 10 to 0
score_new <- 10 - (score/10)
print(paste0("Congratulations! You scored",score,"/100 !"))
}
game("What’s the best length of a word?")
# Enter code here
game <- function(sentence){
nword <- length(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 10 to 0
score_new <- 10 - (score/10)
print(paste0("Congratulations! You scored ",score,"/100 !"))
}
game("What’s the best length of a word?")
# Enter code here
game <- function(sentence){
nword <- length(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
print(score)
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 10 to 0
score_new <- 10 - (score/10)
print(paste0("Congratulations! You scored ",score,"/100 !"))
}
game("What’s the best length of a word?")
# Enter code here
game <- function(sentence){
nword <- length(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
print(score)
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 10 to 0
score_new <- 10 - (score/10)
print(paste0("Congratulations! You scored ",score_new,"/100 !"))
}
game("What’s the best length of a word?")
# Enter code here
game <- function(sentence){
nword <- length(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
print(score)
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 10 to 0
score_new <- 10 - (score/10)
print(paste0("Congratulations! You scored ",score_new," !"))
}
game("What’s the best length of a word?")
# Enter code here
game <- function(sentence){
nword <- length(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
print(score)
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 10 to 0
score_new <- 10 - (score/10)
print(paste0("Congratulations! You scored ",score_new," !"))
}
game("best word")
# Enter code here
game <- function(sentence){
nword <- length(strsplit(sentence, " "))
print(nword)
ncharacter <- nchar(sentence)-nword+1
print(ncharacter)
avg_length <- ncharacter/nword
score <- 1/avg_length*100
print(score)
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 10 to 0
score_new <- 10 - (score/10)
print(paste0("Congratulations! You scored ",score_new," !"))
}
game("best word")
# Enter code here
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
print(nword)
ncharacter <- nchar(sentence)-nword+1
print(ncharacter)
avg_length <- ncharacter/nword
score <- 1/avg_length*100
print(score)
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 10 to 0
score_new <- 10 - (score/10)
print(paste0("Congratulations! You scored ",score_new," !"))
}
game("best word")
# Enter code here
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 10 to 0
score_new <- 10 - (score/10)
print(paste0("Congratulations! You scored ",score_new," !"))
}
game("best word")
# Enter code here
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 10 to 0
score_new <- 10 - (score/10)
print(paste0("Congratulations! You scored ",score_new," !"))
}
game("a best word")
# Enter code here
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 0 to 10
score_new <- (score/10)
print(paste0("Congratulations! You scored ",score_new," !"))
}
game("a best word")
# Enter code here
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 0 to 10
score_new <- (score/10)
print(paste0("Congratulations! You scored ",score_new," !"))
}
game("best word")
# Enter code here
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 0 to 10
score_new <- (score/10)
print(paste0("Congratulations! You scored ",score_new," !"))
}
game("a r best word")
# Enter code here
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
score <- 1/avg_length*100
#The shorter the average word length, the higher the readability, hence the higher the communication skill level.
# map 0 to 100, 0 to 10
score_new <- (score/10)
print(paste0("Congratulations! You scored ",score_new," !"))
}
game("a r b")
# Enter code here
total <- 100
add_total<- function(x = 0, total){
total <<- x+total
return(total)
}
add_total(7,total)
# Enter code here
total <- 100
add_total<- function(x, total){
total <<- x+total
return(total)
}
add_total(7,total)
# Enter code here
total <- 100
add_total<- function(x){
total <<- x+total
return(total)
}
add_total(7,total)
# Enter code here
total <- 100
add_total<- function(x){
total <<- x+total
return(total)
}
add_total(7)
# Enter code here
total <- 100
add_total<- function(x){
total <<- x+total
return(total)
}
add_total(7)
add_total(50)
add_total(100)
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){
print(x)}
}
inner_function(outer_function(x))
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){
print(x)}
}
outer_function(x)
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){
print(x)}
}
outer_function(x)
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){
print(x)}
}
outer_function()
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(){print(x)}
}
outer_function()
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){print(x)}
}
outer_function()
# Enter code here
#outer_function <- function(x){
x <- 5
inner_function <- function(x){print(x)}
#}
#outer_function()
inner_function(x)
# Enter code here
#outer_function <- function(x){
x <- 5
inner_function <- function(x){print(x)}
#}
#outer_function()
inner_function(9)
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){print(x)}
}
#outer_function()
inner_function(9)
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){print(x)}
}
outer_function(10)
inner_function(9)
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){
return(print(x))}
}
outer_function(10)
inner_function(9)
# Enter code here
library(magick)
meme <- function(text,image){
image <- image_read("crying.jpg")
image_annotate(image,text, size = 70, gravity = "south", color = "white")
image_write(image, path = "cryingcatforR.png", format = "png")
}
meme("ME DOING R BE LIKE",image)
# Enter code here
library(magick)
meme <- function(text,image){
image <- image_read("crying.jpg")
image_annotate(image,text, size = 70, gravity = "south", color = "white")
}
meme("ME DOING R BE LIKE",image)
image_write(image, path = "cryingcatforR.png", format = "png")
# Enter code here
library(magick)
meme <- function(text,image){
image <- image_read("crying.jpg")
image_annotate(image,text, size = 70, gravity = "south", color = "white")
}
meme("ME DOING R BE LIKE",image)
image_write(image, path = "cryingcatforR.png", format = "png")
# Enter code here
library(magick)
meme_fn <- function(text,image){
image <- image_read("crying.jpg")
image_annotate(image,text, size = 70, gravity = "south", color = "white")
}
meme <- meme_fn("ME DOING R BE LIKE",image)
image_write(meme, path = "cryingcatforR.png", format = "png")
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){print(x)}
inner_function(x)
}
outer_function(10)
inner_function(9)
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){print(x)}
inner_function(x)
}
outer_function(x)
inner_function(x)
# Enter code here
outer_function <- function(x){
x <- 5
inner_function <- function(x){print(x)}
inner_function(x)
}
outer_function(x)
inner_function(x)
# Enter code here
outer_function <- function(){
x <- 5
inner_function <- function(){print(x)}
inner_function()
}
outer_function(x)
# Enter code here
outer_function <- function(){
x <- 5
inner_function <- function(){print(x)}
inner_function()
}
outer_function()
# Enter code here
outer_function <- function(){
x <- 5
inner_function <- function(){print(x)}
inner_function()
}
outer_function()
inner_function()
# Enter code here
outer_function <- function(){
x <- 5
inner_function <- function(){print(x)}
inner_function()
}
outer_function()
# Enter code here
library(magick)
meme_fn <- function(text,image,){
# Enter code here
library(magick)
meme_fn <- function(text,image){
image <- image_read("crying.jpg")
image_annotate(image,text, size = 70, gravity = "south", color = "white")
image_write(meme, path = "meme.png", format = "png")
}
meme <- meme_fn("ME DOING R BE LIKE",image)
# Enter code here
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
return(avg_length)
#The shorter the average word length, the higher the readability, the higher the communication skill level.
print(paste0("Congratulations! You scored  !"))
}
game("The fox is red.")
# Enter code here
#The shorter the average word length, the higher the readability, the higher the communication skill level.
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
if(avg_length < 3){print("You are a genius!")}
else if(avg_length<5){print("You can communicate well!")}
else(print("Try harder!"))
}
game("The fox is red.")
# Enter code here
#The shorter the average word length, the higher the readability, the higher the communication skill level.
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
if(avg_length < 3){print("You are a genius!")}
else if(avg_length<5){print("You can communicate well!")}
else(print("Try harder!"))
}
game("The fox is red and sophiscated.")
# Enter code here
#The shorter the average word length, the higher the readability, the higher the communication skill level.
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
if(avg_length < 3){print("You are a genius!")}
else if(avg_length<5){print("You can communicate well!")}
else(print("Try harder!"))
}
game("The fox is red and sophiscateddddddddd.")
# Enter code here
#The shorter the average word length, the higher the readability, the higher the communication skill level.
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
if(avg_length < 3){print("You are a genius!")}
else if(avg_length<5){print("You can communicate well!")}
else(print("Try harder!"))
}
game("The fox is red and sophiscateddddddddd.")
# Enter code here
#The shorter the average word length, the higher the readability, the higher the communication skill level.
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
if(avg_length < 3){print("You are a genius!")}
else if(avg_length<5){print("You can communicate well!")}
else(print("Try harder!"))
}
game("The fox is red.")
# Enter code here
library(magick)
meme_fn <- function(text,image){
image <- image_read("crying.jpg")
image_annotate(image,text, size = 70, gravity = "south", color = "white")
image_write(meme, path = "meme.png", format = "png")
}
meme <- meme_fn("ME DOING R BE LIKE",image)
# Enter code here
library(magick)
meme_fn <- function(text){
image <- image_read("crying.jpg")
image_annotate(image,text, size = 70, gravity = "south", color = "white")
image_write(meme, path = "meme.png", format = "png")
}
meme <- meme_fn("ME DOING R BE LIKE")
# Enter code here
library(magick)
meme_fn <- function(text){
image <- image_read("crying.jpg")
image_annotate(image,text, size = 70, gravity = "south", color = "white")
image_write(image, path = "meme.png", format = "png")
}
meme <- meme_fn("ME DOING R BE LIKE")
# Enter code here
library(magick)
meme_fn <- function(text){
image <- image_read("crying.jpg")
image_annotate(image,text, size = 70, gravity = "south", color = "white")
updated_image<-image_annotate(image,text, size = 70, gravity = "south", color = "white")
image_write(updated_image, path = "meme.png", format = "png")
}
meme <- meme_fn("ME DOING R BE LIKE")
# Enter code here
library(magick)
meme_fn <- function(text){
image <- image_read("crying.jpg")
image_annotate(image,text, size = 70, gravity = "south", color = "white")
updated_image<-image_annotate(image,text, size = 70, gravity = "south", color = "white")
image_write(updated_image, path = "meme.png", format = "png")
}
meme <- meme_fn("ME DOING R BE LIKE")
# Enter code here
#The shorter the average word length, the higher the readability, the higher the communication skill level.
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
if(avg_length < 3){print("You are a genius!")}
else if(avg_length<5){print("You can communicate well!")}
else(print("Try harder!"))
print(paste0("You have used",nword,"words, and",ncharacter,"characters. You average word length is",avg_length,"."))
}
game("The fox is red.")
# Enter code here
#The shorter the average word length, the higher the readability, the higher the communication skill level.
game <- function(sentence){
nword <- lengths(strsplit(sentence, " "))
ncharacter <- nchar(sentence)-nword+1
avg_length <- ncharacter/nword
print(paste0("You have used ",nword," words, and ",ncharacter," characters. You average word length is ",avg_length,"."))
if(avg_length < 3){print("You are a genius!")}
else if(avg_length<5){print("You can communicate well!")}
else(print("Try harder!"))
}
game("The fox is red.")
